include: "rules/00_common.smk"
include: "rules/01_ref.smk"
include: "rules/01_setup.smk"
#include: "rules/02_param_optim.smk"
include: "rules/03_mapping.smk"

##### Target rules #####

rule all:
    input:
######################
## 01_ref.smk
######################
        rules.get_genome.output,
        rules.genome_faidx.output,
        rules.genome_dict.output,
        rules.bwa_mem2_index.output,
        rules.get_chrom_lengths.output,
######################
## 01_setup.smk
######################
#        expand(rules.merge_datasets.output,
#                interval = config["seconds_interval"]
#        ),
#        expand(rules.run_hmm.output,
#                interval = config["seconds_interval"],
#                variables = config["hmm_variables"],
#                n_states = config["n_states"]
#        ),
#        expand(rules.split_datasets.output,
#                interval = config["seconds_interval"],
#                variables = config["hmm_variables"],
#                n_states = config["n_states"]
#        ),
#        expand(rules.hmm_concordance_in.output,
#                interval = config["seconds_interval"],
#                variables = config["hmm_variables"],
#        ),
#        expand(rules.hmm_concordance_out.output,
#                interval = config["seconds_interval"],
#                variables = config["hmm_variables"],
#                n_states = config["n_states"]
#        ),
######################
## 03_mapping.smk
######################
#        expand(rules.create_seq_sample_file.output,
#                run = config["runs"]
#        ),
#        expand(rules.samtools_index.output,
#                run = config["runs"],
#                sample = SAMPLES
#        )
